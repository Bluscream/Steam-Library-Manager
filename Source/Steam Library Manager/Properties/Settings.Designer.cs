//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Steam_Library_Manager.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public string steamInstallationPath {
            get {
                return ((string)(this["steamInstallationPath"]));
            }
            set {
                this["steamInstallationPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public global::System.Collections.Specialized.StringCollection backupDirectories {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["backupDirectories"]));
            }
            set {
                this["backupDirectories"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("appName")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public string defaultGameSortingMethod {
            get {
                return ((string)(this["defaultGameSortingMethod"]));
            }
            set {
                this["defaultGameSortingMethod"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ACF")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public string gameSizeCalculationMethod {
            get {
                return ((string)(this["gameSizeCalculationMethod"]));
            }
            set {
                this["gameSizeCalculationMethod"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Uncompressed")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public string archiveSizeCalculationMethod {
            get {
                return ((string)(this["archiveSizeCalculationMethod"]));
            }
            set {
                this["archiveSizeCalculationMethod"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public double Top {
            get {
                return ((double)(this["Top"]));
            }
            set {
                this["Top"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public double Left {
            get {
                return ((double)(this["Left"]));
            }
            set {
                this["Left"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public double Height {
            get {
                return ((double)(this["Height"]));
            }
            set {
                this["Height"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public double Width {
            get {
                return ((double)(this["Width"]));
            }
            set {
                this["Width"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public bool Maximised {
            get {
                return ((bool)(this["Maximised"]));
            }
            set {
                this["Maximised"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20000000")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public long ParallelAfterSize {
            get {
                return ((long)(this["ParallelAfterSize"]));
            }
            set {
                this["ParallelAfterSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"text=Play;action=steam://run/{0};icon=Play;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|separator|text={0} ({1});action=Disk;icon=FolderOpen;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|text=Game Hub;action=steam://url/GameHub/{0};icon=Book;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|separator|text=Workshop;action=steam://url/SteamWorkshopPage/{0};icon=Cog;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|text=Subscribed Workshop Items;action=http://steamcommunity.com/profiles/{1}/myworkshopfiles/?appid={0}&amp;browsefilter=mysubscriptions&amp;sortmethod=lastupdated;icon=Cogs;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|separator|text=Size on disk: {2};action=Disk;icon=HddOutline;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|separator|text=Delete game files (SLM);action=deleteGameFilesSLM;icon=Trash;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;showToSteamBackup=Visible;showToCompressed=Visible;active=True|")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public string gameContextMenu {
            get {
                return ((string)(this["gameContextMenu"]));
            }
            set {
                this["gameContextMenu"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"text=Open library in explorer ({0});action=Disk;icon=FolderOpen;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;active=True|separator|text=Move library;action=moveLibrary;icon=Paste;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;active=True|text=Delete library;action=deleteLibrary;icon=Trash;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;active=True|text=Delete games in library;action=deleteLibrarySLM;icon=TrashOutline;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;active=True|separator|text=Remove from list;action=RemoveFromList;icon=Minus;iconcolor=#FF000000;showToNormal=Visible;showToSLMBackup=Visible;active=True|")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public string libraryContextMenu {
            get {
                return ((string)(this["libraryContextMenu"]));
            }
            set {
                this["libraryContextMenu"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsProviderAttribute(typeof(Steam_Library_Manager.Framework.PortableSettingsProvider))]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        [global::System.Configuration.SettingsManageabilityAttribute(global::System.Configuration.SettingsManageability.Roaming)]
        public bool includeSearchResults {
            get {
                return ((bool)(this["includeSearchResults"]));
            }
            set {
                this["includeSearchResults"] = value;
            }
        }
    }
}
