<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:SLM="clr-namespace:Steam_Library_Manager"
    xmlns:Enums="clr-namespace:Steam_Library_Manager.Definitions.Enums"
    xmlns:CachedImage="clr-namespace:Steam_Library_Manager.Framework.CachedImage"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:Color="clr-namespace:ColorPickerLib.Controls;assembly=ColorPickerLib"
    mc:Ignorable="d"
    x:Name="MainForm" x:Class="Steam_Library_Manager.Main"
    Title="Steam Library Manager" Icon="/Steam Library Manager;component/Resources/steam-icon.ico" MinWidth="930" MinHeight="800" Height="800" Width="930"
    Loaded="MainForm_Loaded" Closing="MainForm_ClosingAsync" ResizeMode="CanResizeWithGrip" SaveWindowPosition="True"
    ShowTitleBar="False" GlowBrush="{DynamicResource AccentColorBrush}" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1" FontSize="13.333"
    >
    <!-- 
    Resource Templates for:
        Library (Type: Steam)
        Library (Type: SLM)
    
        Application listing: GridView
        Application listing: ListView
    
        Task Manager listing: GridView
        Task Manager listing: ListView
    -->
    <Controls:MetroWindow.Resources>
        <!-- Library: Steam -->
        <DataTemplate x:Key="Library_Steam">
            <Grid Height="110" Background="Transparent" DragEnter="LibraryGrid_DragEnter" Drop="LibraryGrid_Drop" AllowDrop="True" MouseDown="Grid_MouseDown" Cursor="Hand">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding Steam.ContextMenu}" />
                </Grid.ContextMenu>

                <!-- TextBlock: Library Path -->
                <TextBlock Text="{Binding Steam.FullPath}" TextWrapping="Wrap" HorizontalAlignment="Left" />

                <Grid VerticalAlignment="Bottom" Margin="0, 0, 0, 28">
                    <!-- TextBlock: Library Type -->
                    <TextBlock Text="Steam"/>

                    <!-- TextBlock: App count -->
                    <TextBlock Text="{Binding Steam.Apps.Count, StringFormat=App(s): \{0\}}" HorizontalAlignment="Right"/>
                </Grid>

                <Grid Height="20" Margin="0,0,0,3" VerticalAlignment="Bottom">

                <!-- ProgressBar: Available free space -->
                    <Controls:MetroProgressBar Height="18" Value="{Binding FreeSpacePerc, Mode=OneWay}" />

                    <!-- TextBlock: Free space text -->
                    <TextBlock Text="{Binding PrettyFreeSpace}" HorizontalAlignment="Center"/>
                </Grid>
            </Grid>
        </DataTemplate>
        
        <!-- Library: Origin -->
        <DataTemplate x:Key="Library_Origin">
            <Grid Height="110" Background="Transparent" DragEnter="LibraryGrid_DragEnter" Drop="LibraryGrid_Drop" AllowDrop="True" MouseDown="Grid_MouseDown" Cursor="Hand">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding Origin.ContextMenu}" />
                </Grid.ContextMenu>

                <!-- TextBlock: Library Path -->
                <TextBlock Text="{Binding Origin.FullPath}" TextWrapping="Wrap" HorizontalAlignment="Left" />

                <Grid VerticalAlignment="Bottom" Margin="0, 0, 0, 28">
                    <!-- TextBlock: Library Type -->
                    <TextBlock Text="Origin"/>

                    <!-- TextBlock: App count -->
                    <TextBlock Text="{Binding Origin.Apps.Count, StringFormat=App(s): \{0\}}" HorizontalAlignment="Right"/>
                </Grid>

                <Grid Height="20" Margin="0,0,0,3" VerticalAlignment="Bottom">

                    <!-- ProgressBar: Available free space -->
                    <Controls:MetroProgressBar Height="18" Value="{Binding FreeSpacePerc, Mode=OneWay}" />

                    <!-- TextBlock: Free space text -->
                    <TextBlock Text="{Binding PrettyFreeSpace}" HorizontalAlignment="Center"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Library: SLM -->
        <DataTemplate x:Key="Library_SLM">
            <Grid Height="110" Background="Transparent" DragEnter="LibraryGrid_DragEnter" Drop="LibraryGrid_Drop" AllowDrop="True" MouseDown="Grid_MouseDown" Cursor="Hand">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenu}" />
                </Grid.ContextMenu>

                <!-- TextBlock: Offline text -->
                <TextBlock Text="OFFLINE" Margin="50,50,0,0" TextWrapping="Wrap" HorizontalAlignment="Left" FontSize="20">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DirectoryInfo.Exists}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DirectoryInfo.Exists}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Hidden" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- TextBlock: Library Path -->
                <TextBlock Text="{Binding DirectoryInfo.FullName}" TextWrapping="Wrap" HorizontalAlignment="Left" />

                <Grid VerticalAlignment="Bottom" Margin="0, 0, 0, 28">
                    <!-- TextBlock: Library Type -->
                    <TextBlock Text="SLM">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DirectoryInfo.Exists}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <!-- TextBlock: App count -->
                    <TextBlock Text="{Binding AppCount, StringFormat=App(s): \{0\}}" HorizontalAlignment="Right">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DirectoryInfo.Exists}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <Grid Height="20" Margin="0,0,0,3" VerticalAlignment="Bottom">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DirectoryInfo.Exists}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Hidden" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <!-- ProgressBar: Available free space -->
                    <Controls:MetroProgressBar Height="18" Value="{Binding FreeSpacePerc, Mode=OneWay}" />

                    <!-- TextBlock: Free space text -->
                    <TextBlock Text="{Binding PrettyFreeSpace}" HorizontalAlignment="Center"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- App Library: GridView -->
        <DataTemplate x:Key="Gamelibrary_Gridview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}" />
                </Grid.ContextMenu>
                <!-- App Header Image -->
                <Grid Width="230px" Height="107px" Margin="2" HorizontalAlignment="Left">
                    <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness=".7" CornerRadius="2">
                        <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding GameHeaderImage}">
                            <CachedImage:Image.Effect>
                                <DropShadowEffect Direction="130" ShadowDepth=".7" BlurRadius="3" />
                            </CachedImage:Image.Effect>
                        </CachedImage:Image>
                    </Border>
                </Grid>
                <!-- /App Header Image -->

                <Grid>
                    <!-- App Name -->
                    <TextBlock Text="{Binding AppName}" Padding="240,4,0,0" TextWrapping="Wrap" FontSize="14" />

                    <!-- App Info Grid -->
                    <Grid VerticalAlignment="Bottom" Margin="240,0,0,5">
                        <!-- Backup Type Text -->
                        <TextBlock Margin="0,-17,0,0" HorizontalAlignment="Right" FontSize="13" FontWeight="SemiBold">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <!--<DataTrigger Binding="{Binding Library.Type}" Value="SLM">
                                            <Setter Property="Text" Value="SLM" />
                                        </DataTrigger>-->
                                        <DataTrigger Binding="{Binding IsSteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <TextBlock Text="{Binding LastUpdated, StringFormat=Updated on: \{0\}}" HorizontalAlignment="Left" Margin="0,-17,0,0" FontFamily="Segoe UI Light" />
                        <TextBlock Text="{Binding AppID}" HorizontalAlignment="Left" FontSize="13" />
                        <TextBlock Text="{Binding PrettyGameSize}" HorizontalAlignment="Right" FontSize="13" FontWeight="SemiBold" />
                    </Grid>
                    <!-- /App Info Grid -->
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- App Library: ListView -->
        <DataTemplate x:Key="Gamelibrary_Listview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}" />
                </Grid.ContextMenu>
                <Grid Width="64px" Height="32px" Margin="5" HorizontalAlignment="Left">
                    <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding GameHeaderImage}" />
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding AppName}" Padding="74,5,0,0" TextWrapping="Wrap" />
                    <TextBlock Text="{Binding PrettyGameSize}" HorizontalAlignment="Right" />
                    <TextBlock HorizontalAlignment="Right" Margin="0,0,60,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <!--
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Library.IsBackup}" Value="true" />
                                            <Condition Binding="{Binding SteamBackup}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Text" Value="SLM backup" />
                                    </MultiDataTrigger>
                                    -->
                                    <DataTrigger Binding="{Binding IsSteamBackup}" Value="true">
                                        <Setter Property="Text" Value="Steam" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsCompressed}" Value="true">
                                        <Setter Property="Text" Value="Compressed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Grid VerticalAlignment="Bottom" Margin="74,0,0,5">
                        <TextBlock Text="{Binding AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding LastUpdated, StringFormat=Updated on: \{0\}}" HorizontalAlignment="Right" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Task Manager: GridView -->
        <DataTemplate x:Key="Tasklibrary_Gridview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove selected Game(s) from Queue" Tag="Remove" Click="TaskManager_ContextMenu_Click"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <Controls:MetroProgressBar Maximum="100" Value="{Binding ProgressBarPerc, Mode=OneWay}" VerticalAlignment="Stretch" >
                    <Controls:MetroProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Completed}" Value="false">
                                    <Setter Property="Opacity" Value="0.20" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Completed}" Value="true">
                                    <Setter Property="Opacity" Value="0.70" />
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Controls:MetroProgressBar.Style>
                </Controls:MetroProgressBar>
                <Grid Width="210px" Height="87px" Margin="2" HorizontalAlignment="Left">
                    <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness=".7" CornerRadius="2">
                        <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding App.GameHeaderImage}" >
                            <CachedImage:Image.Effect>
                                <DropShadowEffect Direction="130" ShadowDepth=".7" BlurRadius="3" />
                            </CachedImage:Image.Effect>
                            <CachedImage:Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Completed}" Value="true">
                                            <Setter Property="Opacity" Value="0.4" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CachedImage:Image.Style>
                        </CachedImage:Image>
                    </Border>
                    <TextBlock FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Text" Value="COMPLETED" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding App.AppName}" Padding="220,1,0,0" TextWrapping="Wrap" FontSize="14" />
                    <Grid VerticalAlignment="Bottom" Margin="220,0,0,5">
                        <TextBlock Text="{Binding App.AppID}" HorizontalAlignment="Left" />

                        <TextBlock Margin="0,-20,0,0"> <!-- Task type, Deletion -->
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TaskType}" Value="Delete">
                                            <Setter Property="Text" Value="Delete" />
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <TextBlock Text="{Binding TaskStatusInfo}" Margin="0,-68,0,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TaskProgressInfo}" Margin="0,-35,40,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding ProgressBarPerc, Mode=OneWay, StringFormat=\{0\}%}" Margin="0,-35,1,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetLibrary.DirectoryInfo.FullName, StringFormat=Target: \{0\}}" Margin="0,-20,1,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding App.PrettyGameSize}" HorizontalAlignment="Right" Margin="0, 0, 1, 0" />

                        <CheckBox Content="Report File Movement" IsChecked="{Binding ReportFileMovement}" Margin="55,0,0,0" />
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TaskType}" Value="Delete">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <CheckBox Content="Remove Original Files" IsChecked="{Binding RemoveOldFiles}" Margin="205,0,0,0"/>
                        </Grid>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TaskType}" Value="Delete">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <CheckBox Content="Compress" IsChecked="{Binding Compress}" Margin="360,0,0,0"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Task Manager: ListView -->
        <DataTemplate x:Key="Tasklibrary_Listview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove selected Game(s) from Queue" Tag="Remove" Click="TaskManager_ContextMenu_Click"/>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Controls:MetroProgressBar Margin="-3" Maximum="100" Value="{Binding ProgressBarPerc, Mode=OneWay}" VerticalAlignment="Stretch" >
                    <Controls:MetroProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Completed}" Value="false">
                                    <Setter Property="Opacity" Value="0.25" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Completed}" Value="true">
                                    <Setter Property="Opacity" Value="0.75" />
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Controls:MetroProgressBar.Style>
                </Controls:MetroProgressBar>
                <Grid Width="64px" Height="32px" Margin="5" HorizontalAlignment="Left">
                    <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding App.GameHeaderImage}">
                        <CachedImage:Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </CachedImage:Image.Style>
                    </CachedImage:Image>
                    <TextBlock FontWeight="Bold"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="11">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Text" Value="COMPLETED" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding App.AppName}" Padding="75,1,0,0" TextWrapping="Wrap" />
                    <Grid VerticalAlignment="Bottom" Margin="74,0,0,5">
                        <TextBlock Text="{Binding App.AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding TargetLibrary.DirectoryInfo.FullName, StringFormat=Target: \{0\}}" Margin="0,-20,0,0" HorizontalAlignment="Right" TextWrapping="Wrap"/>


                        <TextBlock Text="{Binding TaskStatusInfo}" Margin="0,0,40,0" Padding="0,0,40,0" HorizontalAlignment="Right" TextAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding ProgressBarPerc, Mode=OneWay, StringFormat=\{0\}%}" Margin="0,0,50,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding App.PrettyGameSize}" HorizontalAlignment="Right" />

                        <TextBlock HorizontalAlignment="Right" Margin="0,-20,0,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TaskType}" Value="Delete">
                                            <Setter Property="Text" Value="Delete" />
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <CheckBox Content="Report File Movement" IsChecked="{Binding ReportFileMovement}" Margin="55,0,0,0" />
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TaskType}" Value="Delete">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <CheckBox Content="Remove Original Files" IsChecked="{Binding RemoveOldFiles}" Margin="205,0,0,0"/>
                        </Grid>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TaskType}" Value="Delete">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <CheckBox Content="Compress" IsChecked="{Binding Compress}" Margin="360,0,0,0"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        
    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="settings" Click="RightWindowCommands_SettingsButton_Click" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>
    <Grid Margin="0,40,0,0">

        <TextBlock Margin="15, -20, 0, 0" FontSize="35" Width="350" HorizontalAlignment="Left" FontWeight="ExtraLight" Background="Transparent">
            Steam Library Manager
        </TextBlock>
        
        <!-- Grid: Quick settings -->
        <Grid x:Name="QuickSettings" Margin="0,0,10,0">
            <!-- App Sorting Method -->
            <ComboBox Controls:TextBoxHelper.Watermark="Sort applications by" Controls:TextBoxHelper.UseFloatingWatermark="True"  HorizontalAlignment="Right" VerticalContentAlignment="Center" Margin="0,0,155,0" VerticalAlignment="Top" Width="150" Height="40" SelectedItem="{Binding Setting_AppSortingMethod}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:AppSortingMethod}}" SelectionChanged="AppSortingMethod_SelectionChanged">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="30" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>

            <!-- App listing method -->
            <ComboBox Controls:TextBoxHelper.Watermark="App listing method" Controls:TextBoxHelper.UseFloatingWatermark="True"  HorizontalAlignment="Right" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="150" Height="40" SelectedItem="{Binding Setting_LibraryStyle}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:LibraryStyle}}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Height" Value="30" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </Grid>

        <Controls:MetroTabControl Controls:TabControlHelper.Underlined="TabPanel" Margin="10, 35, 10, 0">
            <!-- Tab: Library -->
            <Controls:MetroTabItem Header="Library" IsSelected="True">
                <Grid>
                    <!-- ListView: Library Panel -->
                    <ListView BorderThickness=".6" BorderBrush="{DynamicResource AccentColorBrush}" x:Name="LibraryPanel" AllowDrop="True" Drop="LibraryPanel_Drop" SelectionMode="Single" 
                              MaxWidth="201" Margin="0,10,0,10" HorizontalAlignment="Left" Width="201" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                              ScrollViewer.VerticalScrollBarVisibility="Hidden" SelectionChanged="LibraryGrid_MouseDown" Padding="0,-2, 0, 0">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Type}" Value="Steam">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Library_Steam}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="Origin">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Library_Origin}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Type}" Value="SLM">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Library_SLM}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- ListView: App Panel -->
                    <ListView BorderThickness=".6" BorderBrush="{DynamicResource AccentColorBrush}" x:Name="AppPanel" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                              Margin="205,10,0,50" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" 
                              Padding="0, -2, 0, 0" dd:DragDrop.IsDragSource="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Grid">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Gamelibrary_Gridview}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Listview">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Gamelibrary_Listview}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- TextBox: Search -->
                    <TextBox Controls:TextBoxHelper.Watermark="Search in selected library" Controls:TextBoxHelper.UseFloatingWatermark="True" Controls:TextBoxHelper.ClearTextButton="True" Margin="205,0,0,10" VerticalContentAlignment="Center" TextWrapping="Wrap" Height="35" VerticalAlignment="Bottom" Text="{SLM:SettingBinding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="TextBox_TextChanged" />
                </Grid>
            </Controls:MetroTabItem>
            <!-- Tab: Task Manager -->
            <Controls:MetroTabItem Header="Task Manager">
                <Grid>
                    <!-- ListView: Task Manager Tasks -->
                    <ListView x:Name="TaskPanel" HorizontalContentAlignment="Stretch"  BorderThickness=".6" BorderBrush="{DynamicResource AccentColorBrush}" VerticalContentAlignment="Stretch" Margin="0,10,0,305" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Grid">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Tasklibrary_Gridview}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Listview">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Tasklibrary_Listview}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Grid Margin="0,0,0,255" Height="45" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                        <!-- Button: Start Task Manager -->
                        <Button x:Name="Button_StartTaskManager" FontSize="13" Content="Start" Tag="Start" Click="TaskManager_Buttons_Click"  Margin="0,0,105,0" HorizontalAlignment="Left" Width="140" Height="45" VerticalAlignment="Bottom" />

                        <Button x:Name="Button_PauseTaskManager" FontSize="13" IsEnabled="False" Content="Pause" Tag="Pause" Click="TaskManager_Buttons_Click" HorizontalAlignment="Left" Width="140" Height="45" VerticalAlignment="Bottom" Margin="150,0,0,0" />
                        
                        <!-- Button: Stop Task Manager -->
                        <Button x:Name="Button_StopTaskManager" FontSize="13" IsEnabled="False" Content="Stop" Tag="Stop" Click="TaskManager_Buttons_Click" HorizontalAlignment="Left" Width="140" Height="45" VerticalAlignment="Bottom" Margin="300,0,0,0" />

                        <!-- Button: Clear Completed Tasks -->
                        <Button Content="Clear Completed Tasks" FontSize="13" Tag="ClearCompleted" Click="TaskManager_Buttons_Click"  Margin="450,0,0,0" HorizontalAlignment="Left" Width="180" Height="45" VerticalAlignment="Bottom" />

                        <!-- Button: Check for Backup Updates -->
                        <Button Content="Check for Backup Updates" FontSize="13" Tag="BackupUpdates" Click="TaskManager_Buttons_Click"  Margin="640,0,0,0" HorizontalAlignment="Left" Width="200" Height="45" VerticalAlignment="Bottom" />
                    </Grid>

                    <!-- ListBox: Task Manager Logs -->
                    <ListBox x:Name="TaskManager_LogsView" Margin="0,0,0,10" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Height="240" VerticalAlignment="Bottom" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock MaxHeight="16" Text="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Controls:MetroTabItem>
            <!-- Tab: Library Cleaner -->
            <Controls:MetroTabItem Header="Library Cleaner">
                <Grid>
                    <!-- ListView: Library Cleaner -->
                    <ListView x:Name="LibraryCleaner" BorderThickness="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,0,0,50" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Open in Explorer" Tag="Explorer" Click="LibraryCleaner_ContextMenuItem_Click"/>
                                            <MenuItem Header="Delete selected Folder(s)" Tag="Delete" Click="LibraryCleaner_ContextMenuItem_Click"/>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <Grid>
                                        <TextBlock Text="{Binding FSInfo.Name}" Padding="0,0,0,0" TextWrapping="Wrap" />
                                        <Grid VerticalAlignment="Bottom" Margin="0,20,0,0">
                                            <TextBlock Text="{Binding FSInfo.FullName}" HorizontalAlignment="Left" />
                                            <TextBlock Text="{Binding FSInfo.LastWriteTime, StringFormat=Last Write Time: \{0\}}" HorizontalAlignment="Right" TextWrapping="Wrap" />
                                            <TextBlock Text="{Binding PrettyFolderSize}" HorizontalAlignment="Right" Margin="0,-20,0,0" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- Button: Delete All-->
                    <Button Tag="DeleteAll" FontSize="13" Content="Delete All" Margin="10,0,0,10" HorizontalAlignment="Left" Width="275" Click="LibraryCleaner_ButtonClick" Height="40" VerticalAlignment="Bottom" />

                    <!-- Button: Move All-->
                    <Button Tag="MoveAll" FontSize="13" Content="Move All" Margin="305,0,0,10" Click="LibraryCleaner_ButtonClick" Width="275" Height="40" HorizontalAlignment="Left" VerticalAlignment="Bottom" />

                    <!-- Button: Refresh All-->
                    <Button Tag="Refresh" FontSize="13" Content="Refresh List" Margin="600,0,0,10" HorizontalAlignment="Left" Width="275" Click="LibraryCleaner_ButtonClick" Height="40" VerticalAlignment="Bottom"/>
                </Grid>
            </Controls:MetroTabItem>
            <!-- TBC: SLM Server
            <TabItem Padding="30, 10">
                <TabItem.Header>
                    <TextBlock Text="SLM Server" FontSize="15"/>
                </TabItem.Header>
                <Grid Background="White">
                    <Label Content="Listen IP:" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Left" Margin="104,10,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ListenIP}" Height="22" />
                    <Button Content="Get IP" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,10,0,0" Width="68" Height="22" Click="GetIPButton_Click" />

                    <Label Content="Listen Port:" Margin="10,37,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Left" Margin="104,37,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ListenPort}" Height="22" />
                    <Button Content="Get Port" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,37,0,0" Width="68" Height="22" Click="GetPortButton_Click" />

                    <Label Content="Server Status:" Margin="10,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label Name="ServerStatus" Content="" Margin="104,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="284"/>

                    <Button Name="ToggleSLMServer" Content="Start Server" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,89,0,0" Width="68" Height="22" Click="ToggleSLMServerButton_Click" />

                    <Label Content="IP:" Margin="589,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox Margin="617,10,67,0" VerticalAlignment="Top" Text="{slm:SettingBinding IPToConnect}" Height="22" />

                    <Label Content="Port:" Margin="578,33,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox Margin="617,37,67,0" VerticalAlignment="Top" Text="{slm:SettingBinding PortToConnect}" Height="22" />
                    <Button Content="Connect" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,21,10,0" Width="52" Height="22" Click="Button_Click" />
                    <Label Content="Status:" Margin="567,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label x:Name="ConnectionStatus" Content="" Margin="617,64,10,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
            -->
            <!-- Tab: Settings -->
            <Controls:MetroTabItem Visibility="Hidden" Name="TabItem_Settings">
                <Grid>
                    <GroupBox x:Name="GeneralSettingsGroupBox" Header="General Settings" Margin="0,5,360,5">
                        <Grid>
                            <!-- Application sorting method -->
                            <ComboBox Controls:TextBoxHelper.Watermark="Sort applications by" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" Height="40" 
                                      Margin="5,5,0,0" VerticalAlignment="Top" Width="240" SelectedItem="{Binding Setting_AppSortingMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ItemsSource="{Binding Source={SLM:EnumBindingSource EnumType={x:Type Enums:AppSortingMethod}}}" />

                            <!-- Application size calculation method -->
                            <ComboBox Controls:TextBoxHelper.Watermark="Get application size from" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" Height="40" 
                                      Margin="5,55,0,0" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="240" 
                                      SelectedItem="{Binding Setting_AppSizeCalculationMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ItemsSource="{SLM:EnumBindingSource {x:Type Enums:AppSizeCalculationMethod}}" />

                            <!-- Archive size calculation method -->
                            <ComboBox Controls:TextBoxHelper.Watermark="Get compressed archive size from" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" Height="40"
                                      Margin="5,105,0,0" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="240" 
                                      SelectedItem="{Binding Setting_ArchiveSizeCalculationMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ItemsSource="{SLM:EnumBindingSource {x:Type Enums:ArchiveSizeCalculationMethod}}" />

                            <!-- File size to start move synchronously (MB) -->
                            <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Move files synchronously after" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" 
                                                    Margin="5,155,0,0" HorizontalContentAlignment="Left" Height="40" VerticalAlignment="Top" Width="240" Minimum="1" Maximum="1024" 
                                                    Value="{SLM:SettingBinding ParallelAfterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StringFormat="{}{0:N0} MB" />

                            <ComboBox Controls:TextBoxHelper.Watermark="Theme Accent" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" Height="40" 
                                      Margin="5,205,0,0" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="240" SelectedItem="{Binding Setting_ThemeAccent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ItemsSource="{SLM:EnumBindingSource {x:Type Enums:ThemeAccents}}" />

                            <ComboBox Controls:TextBoxHelper.Watermark="Theme Base" Controls:TextBoxHelper.UseFloatingWatermark="True" HorizontalAlignment="Left" Height="40" 
                                      Margin="5,255,0,0" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="240" 
                                      SelectedItem="{Binding Setting_BaseTheme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:BaseTheme}}" />

                            <!-- Advanced Logging (Requires restart) -->
                            <Controls:ToggleSwitch Header="Advanced Logging (Requires restart)" Margin="5,305,0,0" 
                                                   IsChecked="{SLM:SettingBinding Advanced_Logging, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" 
                                                   Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" />

                            <!-- Check for Updates at Startup -->
                            <Controls:ToggleSwitch Header="Check for Updates on Startup" Margin="5,355,0,0" OnLabel="Yes" OffLabel="No" 
                                                   IsChecked="{SLM:SettingBinding CheckforUpdatesAtStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" />

                            <!-- Keep searching while switching library -->
                            <Controls:ToggleSwitch Header="Keep searching on library change" Margin="5,405,0,0" OnLabel="Yes" OffLabel="No" 
                                                   IsChecked="{SLM:SettingBinding includeSearchResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   HorizontalAlignment="Left" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" />

                            <!-- Button: View Logs (If exists) -->
                            <Button Content="Open Log Folder" Margin="255,5,0,0" VerticalAlignment="Top" Click="ViewLogsButton" Width="280" Height="40" HorizontalAlignment="Left" />

                            <!-- Button: Check for Updates -->
                            <Button Content="Check for Updates" Margin="255,55,0,0" VerticalAlignment="Top" Click="CheckForUpdates_Click" Width="280" Height="40" HorizontalAlignment="Left" />

                            <!-- Button: Clear image cache-->
                            <Button Content="Clear header image cache" Margin="255,105,0,0" VerticalAlignment="Top" Click="HeaderImageClearButton_ClickAsync" Width="280" Height="40" HorizontalAlignment="Left" />

                            <!-- Donate Button -->
                            <Button Content="Donate" Click="DonateButton_Click" Margin="255,155,0,0" VerticalAlignment="Top" Width="280" Height="40" HorizontalAlignment="Left" />

                            <GroupBox Header="Custom Theme" Margin="255,205,0,0">
                                <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                                    <Grid>
                                        <Label Content="Text Color:" Margin="0,5,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,5,0,0" Tag="TextBrush" SelectedColor="{Binding Color, Source={StaticResource TextBrush}}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="TabItem Text Color" Margin="0,55,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,55,0,0" Tag="GrayNormalBrush" SelectedColor="{Binding Color, Source={StaticResource GrayNormalBrush}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Background" Margin="0,105,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,105,0,0" Tag="WhiteBrush" SelectedColor="{Binding Color, Source={StaticResource WhiteBrush}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Control BG" Margin="0,155,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,155,0,0" Tag="ControlBackgroundBrush" SelectedColor="{Binding Color, Source={StaticResource ControlBackgroundBrush}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Context Menu" Margin="0,205,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,205,0,0" Tag="MenuItemBackgroundBrush" SelectedColor="{Binding Color, Source={StaticResource MenuItemBackgroundBrush}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Window BG" Margin="0,255,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,255,0,0" Tag="WindowBackgroundBrush" SelectedColor="{Binding Color, Source={StaticResource WindowBackgroundBrush}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="TransparentWhite" Margin="0,305,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,305,0,0" Tag="TransparentWhiteBrush" SelectedColor="{Binding Color, Source={StaticResource TransparentWhiteBrush}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="GrayBrush1" Margin="0,355,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,355,0,0" Tag="GrayBrush1" SelectedColor="{Binding Color, Source={StaticResource GrayBrush1}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="GrayBrush2" Margin="0,405,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,405,0,0" Tag="GrayBrush2" SelectedColor="{Binding Color, Source={StaticResource GrayBrush2}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Button Click" Margin="0,455,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,455,0,0" Tag="GrayBrush7" SelectedColor="{Binding Color, Source={StaticResource GrayBrush7}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Button Hover" Margin="0,505,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,505,0,0" Tag="GrayBrush8" SelectedColor="{Binding Color, Source={StaticResource GrayBrush8}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>

                                        <Label Content="Button BG" Margin="0,555,0,0"/>
                                        <Color:ColorPicker Width="150" Margin="0,555,0,0" Tag="GrayBrush10" SelectedColor="{Binding Color, Source={StaticResource GrayBrush10}, Mode=OneTime}" SelectedColorChanged="ColorPicker_SelectedColorChanged"  HorizontalAlignment="Right" VerticalAlignment="Top" ColorMode="ColorPalette" DisplayColorAndName="True" ShowRecentColors="True"/>
                                    </Grid>
                                </ScrollViewer>
                            </GroupBox>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Task Manager Default Settings" Margin="0,5,0,5" HorizontalAlignment="Right" Width="355">
                        <Grid>
                            <!-- Remove Source Files -->
                            <Controls:ToggleSwitch Header="Remove files at Source directory" OnLabel="Remove" OffLabel="Do NOT Remove" IsChecked="{SLM:SettingBinding Global_RemoveOldFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   HorizontalAlignment="Left" Margin="5,5,0,0" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                                   />

                            <!-- Compress Files -->
                            <Controls:ToggleSwitch Header="Compress Files" OnLabel="Compress" OffLabel="Do NOT Compress" IsChecked="{SLM:SettingBinding Global_Compress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   HorizontalAlignment="Left" Margin="5,55,0,0" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                                   />

                            <!-- Report File Movement -->
                            <Controls:ToggleSwitch Header="Report File Movement" IsChecked="{SLM:SettingBinding Global_ReportFileMovement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   HorizontalAlignment="Left" Margin="5,105,0,0" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                                   />

                            <!-- Start Task Manager on Startup -->
                            <Controls:ToggleSwitch Header="Start Task Manager on Startup" IsChecked="{SLM:SettingBinding Global_StartTaskManagerOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   HorizontalAlignment="Left" Margin="5,155,0,0" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                                   />

                            <!-- Play a sound on completion-->
                            <Controls:ToggleSwitch Header="Play a sound on completion" IsChecked="{SLM:SettingBinding PlayASoundOnCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   HorizontalAlignment="Left" Margin="5,205,0,0" Style="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}"
                                                   />
                        </Grid>
                    </GroupBox>
                </Grid>
            </Controls:MetroTabItem>
        </Controls:MetroTabControl>
    </Grid>
</Controls:MetroWindow>
