<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:SLM="clr-namespace:Steam_Library_Manager"
    xmlns:Enums="clr-namespace:Steam_Library_Manager.Definitions.Enums"
    xmlns:CachedImage="clr-namespace:Steam_Library_Manager.Framework.CachedImage"
    x:Name="MainForm" x:Class="Steam_Library_Manager.Main"
    Title="Steam Library Manager" Icon="/Steam Library Manager;component/Resources/steam-icon.ico" MinWidth="930" MinHeight="800"
    SnapsToDevicePixels="True" Loaded="MainForm_Loaded" Closing="MainForm_Closing" SourceInitialized="MainForm_SourceInitialized">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="Steam Library Manager" />
    </Window.TaskbarItemInfo>
    <Window.Resources>
        <!-- App Library: GridView -->
        <DataTemplate x:Key="Gamelibrary_Gridview">
            <Grid MouseMove="Gamelibrary_MouseMove" ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}">
                        <ContextMenu.ItemContainerStyle>
                            <Style>
                                <EventSetter Event="MenuItem.Click" Handler="Gamelibrary_ContextMenuItem_Click" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </Grid.ContextMenu>

                <!-- App Header Image -->
                <Grid Width="230px" Height="107px" Margin="4" HorizontalAlignment="Left">
                    <Border BorderBrush="DarkRed" BorderThickness=".6" CornerRadius="2">
                        <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding GameHeaderImage}">
                            <Image.Effect>
                                <DropShadowEffect Direction="130" Color="#FFB6C2CB" ShadowDepth="1" BlurRadius="10" />
                            </Image.Effect>
                        </CachedImage:Image>
                    </Border>
                </Grid>
                <!-- /App Header Image -->

                <Grid>
                    <!-- App Name -->
                    <TextBlock Text="{Binding AppName}" Padding="240,5,0,0" TextWrapping="Wrap" FontSize="14" />

                    <!-- App Info Grid -->
                    <Grid VerticalAlignment="Bottom" Margin="240,0,0,5">
                        <!-- Backup Type Text -->
                        <TextBlock Margin="0,-17,0,0" HorizontalAlignment="Right" FontSize="13" FontWeight="SemiBold">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Library.IsBackup}" Value="true" />
                                                <Condition Binding="{Binding SteamBackup}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="SLM" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding SteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <TextBlock Text="{Binding LastUpdated, StringFormat='Updated on: {0}'}" HorizontalAlignment="Left" Margin="0,-17,0,0" FontFamily="Segoe UI Light" />
                        <TextBlock Text="{Binding AppID}" HorizontalAlignment="Left" FontSize="13" />
                        <TextBlock Text="{Binding PrettyGameSize}" HorizontalAlignment="Right" FontSize="13" FontWeight="SemiBold" />
                    </Grid>
                    <!-- /App Info Grid -->
                </Grid>
            </Grid>
        </DataTemplate>
        <!-- App Library: ListView -->
        <DataTemplate x:Key="Gamelibrary_Listview">
            <Grid MouseMove="Gamelibrary_MouseMove" ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}">
                        <ContextMenu.ItemContainerStyle>
                            <Style>
                                <EventSetter Event="MenuItem.Click" Handler="Gamelibrary_ContextMenuItem_Click" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Grid Width="64px" Height="32px" Margin="5" HorizontalAlignment="Left">
                    <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding GameHeaderImage}" />
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding AppName}" Padding="74,5,0,0" TextWrapping="Wrap" />
                    <TextBlock Text="{Binding PrettyGameSize}" HorizontalAlignment="Right" />
                    <TextBlock HorizontalAlignment="Right" Margin="0,0,60,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Library.IsBackup}" Value="true" />
                                            <Condition Binding="{Binding SteamBackup}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Text" Value="SLM backup" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding SteamBackup}" Value="true">
                                        <Setter Property="Text" Value="Steam backup" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsCompressed}" Value="true">
                                        <Setter Property="Text" Value="Compressed backup" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Grid VerticalAlignment="Bottom" Margin="74,0,0,5">
                        <TextBlock Text="{Binding AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding LastUpdated, StringFormat='Updated on: {0}'}" HorizontalAlignment="Right" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        <!-- Task Manager: GridView -->
        <DataTemplate x:Key="Tasklibrary_Gridview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove selected Game(s) from Queue" Tag="Remove" Click="TaskManager_ContextMenu_Click"></MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>

                <ProgressBar Maximum="100" Value="{Binding ProgressBarPerc, Mode=OneWay}" >
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Completed}" Value="false">
                                    <Setter Property="Opacity" Value="0.25" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Completed}" Value="true">
                                    <Setter Property="Opacity" Value="0.75" />
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <Grid Width="210px" Height="87px" Margin="5" HorizontalAlignment="Left">
                    <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding TargetApp.GameHeaderImage}" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </CachedImage:Image>
                    <TextBlock FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Text" Value="COMPLETED" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding TargetApp.AppName}" Padding="220,5,0,0" TextWrapping="Wrap" FontSize="13" />
                    <Grid VerticalAlignment="Bottom" Margin="220,0,0,5">
                        <TextBlock Text="{Binding TargetApp.AppID}" HorizontalAlignment="Left" />

                        <TextBlock Text="{Binding PrettyAvgSpeed}" Margin="0,-35,40,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding ProgressBarPerc, Mode=OneWay, StringFormat={}{0}%}" Margin="0,-35,2,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetLibrary.FullPath, StringFormat='Target: {0}'}" Margin="0,-20,2,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetApp.PrettyGameSize}" HorizontalAlignment="Right" Margin="0, 0, 2, 0" />

                        <TextBlock Margin="0,-20,0,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetApp.Library.IsBackup}" Value="true" />
                                                <Condition Binding="{Binding TargetApp.SteamBackup}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="SLM backup" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding TargetApp.SteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam backup" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TargetApp.IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed backup" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <CheckBox Content="Remove Original Files" IsChecked="{Binding RemoveOldFiles}" Margin="60,0,0,0" />
                        <CheckBox Content="Compress" IsChecked="{Binding Compress}" Margin="200,0,0,0" >
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetApp.IsCompressed}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Compress" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetApp.IsCompressed}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Keep Compressed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <CheckBox Content="Report File Movement" IsChecked="{Binding ReportFileMovement}" Margin="290,0,0,0" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        <!-- Task Manager: ListView -->
        <DataTemplate x:Key="Tasklibrary_Listview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove selected Game(s) from Queue" Tag="Remove" Click="TaskManager_ContextMenu_Click"></MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>
                <ProgressBar Margin="-3" Maximum="100" Value="{Binding ProgressBarPerc, Mode=OneWay}" >
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Completed}" Value="false">
                                    <Setter Property="Opacity" Value="0.25" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Completed}" Value="true">
                                    <Setter Property="Opacity" Value="0.75" />
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <Grid Width="64px" Height="32px" Margin="5" HorizontalAlignment="Left">
                    <CachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding TargetApp.GameHeaderImage}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </CachedImage:Image>
                    <TextBlock FontWeight="Bold"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="11">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Text" Value="COMPLETED" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding TargetApp.AppName}" Padding="74,5,0,0" TextWrapping="Wrap" />
                    <Grid VerticalAlignment="Bottom" Margin="74,0,0,5">
                        <TextBlock Text="{Binding TargetApp.AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding TargetApp.PrettyGameSize}" HorizontalAlignment="Right" />
                        <TextBlock Text="{Binding ProgressBarPerc, Mode=OneWay, StringFormat={}{0}%}" Margin="0,0,50,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetLibrary.FullPath, StringFormat='Target: {0}'}" Margin="0,-20,0,0" HorizontalAlignment="Right" TextWrapping="Wrap" />

                        <TextBlock HorizontalAlignment="Right" Margin="0,0,60,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetApp.Library.IsBackup}" Value="true" />
                                                <Condition Binding="{Binding TargetApp.SteamBackup}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="SLM backup" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding TargetApp.SteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam backup" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TargetApp.IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed backup" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <CheckBox Content="Remove Original Files" IsChecked="{Binding RemoveOldFiles}" Margin="60,0,0,0" />
                        <CheckBox Content="Compress" IsChecked="{Binding Compress}" Margin="200,0,0,0" >
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetApp.IsCompressed}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Compress" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetApp.IsCompressed}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Keep Compressed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <CheckBox Content="Report File Movement" IsChecked="{Binding ReportFileMovement}" Margin="290,0,0,0" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid Margin="0,40,2,2" Background="#00000000">
        <!-- Grid: Quick settings -->
        <Grid x:Name="QuickSettings" Margin="500,-25,10,0" Height="35" VerticalAlignment="Top">
            <!-- App Sorting Method -->
            <ComboBox HorizontalAlignment="Right" VerticalContentAlignment="Center" Margin="0,0,155,0" VerticalAlignment="Top" Width="150" Height="30" SelectedItem="{Binding Setting_AppSortingMethod}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:AppSortingMethod}}" SelectionChanged="GameSortingMethod_SelectionChanged">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Height" Value="30" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>

            <!-- App listing method -->
            <ComboBox HorizontalAlignment="Right" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="150" Height="30" SelectedItem="{Binding Setting_LibraryStyle}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:LibraryStyle}}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Height" Value="25" />
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </Grid>
        <TabControl Margin="10,0,10,10">
            <!-- Tab: Library -->
            <TabItem IsSelected="True" Padding="35, 15">
                <TabItem.Header>
                    <TextBlock Text="Library" FontSize="15"/>
                </TabItem.Header>
                <Grid>
                    <!-- ListView: Library Panel -->
                    <ListView x:Name="LibraryPanel" AllowDrop="True" Drop="LibraryPanel_Drop" SelectionMode="Single" MaxWidth="200" Margin="10,10,0,10" HorizontalAlignment="Left"
                              Width="200" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                              IsSynchronizedWithCurrentItem="True" SelectionChanged="LibraryGrid_MouseDown">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="110" Background="Transparent" DragEnter="LibraryGrid_DragEnter" Drop="LibraryGrid_Drop" AllowDrop="True" MouseDown="Grid_MouseDown" Cursor="Hand">
                                    <Grid.ContextMenu>
                                        <ContextMenu ItemsSource="{Binding ContextMenu}" >
                                            <ContextMenu.ItemContainerStyle>
                                                <Style>
                                                    <EventSetter Event="MenuItem.Click" Handler="LibraryCMenuItem_Click" />
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                        </ContextMenu>
                                    </Grid.ContextMenu>

                                    <!-- TextBlock: Offline text -->
                                    <TextBlock Text="OFFLINE" Margin="50,50,0,0" TextWrapping="Wrap" HorizontalAlignment="Left" FontSize="20">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsOffline}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsOffline}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <!-- TextBlock: Library Path -->
                                    <TextBlock Text="{Binding FullPath}" TextWrapping="Wrap" HorizontalAlignment="Left" FontSize="13" />

                                    <Grid VerticalAlignment="Bottom" Margin="0, 0, 0, 28">
                                        <!-- TextBlock: Library Type -->
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsBackup}" Value="false" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Text" Value="Steam" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsBackup}" Value="true" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Text" Value="SLM" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsOffline}" Value="true" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <!-- TextBlock: App count -->
                                        <TextBlock Text="{Binding Apps.Count, StringFormat=App(s): \{0\}}" HorizontalAlignment="Right">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsOffline}" Value="true" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>

                                    <Grid Height="20" Margin="0,0,0,3" VerticalAlignment="Bottom">
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsOffline}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>

                                        <!-- ProgressBar: Available free space -->
                                        <ProgressBar Height="20" Value="{Binding FreeSpacePerc, Mode=OneWay}" />

                                        <!-- TextBlock: Free space text -->
                                        <TextBlock FontSize="13" Height="20" Text="{Binding PrettyFreeSpace}" HorizontalAlignment="Center"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- ListView: App Panel -->
                    <ListView x:Name="AppPanel" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="215,10,10,50" SelectionMode="Extended" IsTabStop="False" 
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Grid">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Gamelibrary_Gridview}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Listview">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Gamelibrary_Listview}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- TextBox: Search -->
                    <TextBox Margin="215,0,10,10" VerticalContentAlignment="Center" TextWrapping="Wrap" Height="35" VerticalAlignment="Bottom" Text="{SLM:SettingBinding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="TextBox_TextChanged" />

                    <!-- Button: Reset Search -->
                    <Button Content="Reset Search" FontSize="13" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="150" Height="35" Click="ResetSearchTextButton_Click"/>
                </Grid>
            </TabItem>
            <!-- Tab: Task Manager -->
            <TabItem Padding="30, 15">
                <TabItem.Header>
                    <TextBlock Text="Task Manager" FontSize="15"/>
                </TabItem.Header>
                <Grid>
                    <!-- ListView: Task Manager Tasks -->
                    <ListView x:Name="TaskPanel" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="10,10,10,305" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Grid">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Tasklibrary_Gridview}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{SLM:SettingBinding LibraryStyle}" Value="Listview">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Tasklibrary_Listview}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Grid Margin="10,0,0,255" Height="45" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="450">
                        <!-- Button: Start Task Manager -->
                        <Button x:Name="Button_StartTaskManager" FontSize="13" Content="Start Task Manager" Tag="Start" Click="TaskManager_Buttons_Click"  Margin="0,0,105,0" HorizontalAlignment="Left" Width="140" MinHeight="45" MaxHeight="30" Height="30" VerticalAlignment="Bottom" />

                        <!-- Button: Stop Task Manager -->
                        <Button x:Name="Button_StopTaskManager" FontSize="13" IsEnabled="False" Content="Stop Task Manager" Tag="Stop" Click="TaskManager_Buttons_Click" HorizontalAlignment="Left" Width="140" MinHeight="30" Height="45" VerticalAlignment="Bottom" Margin="145,0,0,0" />

                        <!-- Button: Clear Completed Tasks -->
                        <Button Content="Clear Completed Tasks" FontSize="13" Tag="ClearCompleted" Click="TaskManager_Buttons_Click"  Margin="290,0,0,0" HorizontalAlignment="Left" Width="140" MinHeight="30" Height="45" VerticalAlignment="Bottom" />

                        <!-- Button: Check for Backup Updates -->
                        <Button Content="Check for Backup Updates" FontSize="13" Tag="BackupUpdates" Click="TaskManager_Buttons_Click"  Margin="435,0,-146,0" HorizontalAlignment="Left" Width="161" MinHeight="30" Height="45" VerticalAlignment="Bottom" />
                    </Grid>

                    <!-- ListBox: Task Manager Logs -->
                    <ListBox x:Name="TaskManager_LogsView" Margin="10,0,10,10" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Height="240" VerticalAlignment="Bottom" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock MaxHeight="16" Text="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
            <!-- Tab: Library Cleaner -->
            <TabItem Padding="20, 10">
                <TabItem.Header>
                    <TextBlock Text="Library Cleaner" FontSize="15"/>
                </TabItem.Header>
                <Grid>
                    <!-- ListView: Library Cleaner -->
                    <ListView x:Name="LibraryCleaner" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="10,10,10,50" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Open in Explorer" Tag="Explorer" Click="LibraryCleaner_ContextMenuItem_Click"></MenuItem>
                                            <MenuItem Header="Delete selected Folder(s)" Tag="Delete" Click="LibraryCleaner_ContextMenuItem_Click"></MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <Grid>
                                        <TextBlock Text="{Binding FSInfo.Name}" Padding="0,0,0,0" TextWrapping="Wrap" />
                                        <Grid VerticalAlignment="Bottom" Margin="0,20,0,0">
                                            <TextBlock Text="{Binding FSInfo.FullName}" HorizontalAlignment="Left" />
                                            <TextBlock Text="{Binding FSInfo.LastWriteTime, StringFormat='Last Write Time: {0}'}" HorizontalAlignment="Right" TextWrapping="Wrap" />
                                            <TextBlock Text="{Binding PrettyFolderSize}" HorizontalAlignment="Right" Margin="0,-20,0,0" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- Button: Delete All-->
                    <Button Tag="DeleteAll" Content="Delete All" Margin="10,0,0,10" HorizontalAlignment="Left" Width="275" Click="LibraryCleaner_ButtonClick" Height="35" VerticalAlignment="Bottom" />

                    <!-- Button: Move All-->
                    <Button Tag="MoveAll" Content="Move All" Margin="305,0,0,10" Click="LibraryCleaner_ButtonClick" Width="275" Height="35" HorizontalAlignment="Left" VerticalAlignment="Bottom" />

                    <!-- Button: Refresh All-->
                    <Button Tag="Refresh" Content="Refresh List" Margin="600,0,0,10" HorizontalAlignment="Left" Width="275" Click="LibraryCleaner_ButtonClick" Height="35" VerticalAlignment="Bottom"/>
                </Grid>
            </TabItem>
            <!-- TBC: SLM Server
            <TabItem Padding="30, 10">
                <TabItem.Header>
                    <TextBlock Text="SLM Server" FontSize="15"/>
                </TabItem.Header>
                <Grid Background="White">
                    <Label Content="Listen IP:" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Left" Margin="104,10,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ListenIP}" Height="22" />
                    <Button Content="Get IP" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,10,0,0" Width="68" Height="22" Click="GetIPButton_Click" />

                    <Label Content="Listen Port:" Margin="10,37,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Left" Margin="104,37,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ListenPort}" Height="22" />
                    <Button Content="Get Port" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,37,0,0" Width="68" Height="22" Click="GetPortButton_Click" />

                    <Label Content="Server Status:" Margin="10,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label Name="ServerStatus" Content="" Margin="104,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="284"/>

                    <Button Name="ToggleSLMServer" Content="Start Server" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,89,0,0" Width="68" Height="22" Click="ToggleSLMServerButton_Click" />

                    <Label Content="IP:" Margin="589,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox Margin="617,10,67,0" VerticalAlignment="Top" Text="{slm:SettingBinding IPToConnect}" Height="22" />

                    <Label Content="Port:" Margin="578,33,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox Margin="617,37,67,0" VerticalAlignment="Top" Text="{slm:SettingBinding PortToConnect}" Height="22" />
                    <Button Content="Connect" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,21,10,0" Width="52" Height="22" Click="Button_Click" />
                    <Label Content="Status:" Margin="567,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label x:Name="ConnectionStatus" Content="" Margin="617,64,10,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
            -->
            <!-- Tab: Settings -->
            <TabItem Padding="25, 10">
                <TabItem.Header>
                    <TextBlock Text="Settings" FontSize="15"/>
                </TabItem.Header>
                <Grid>
                    <GroupBox x:Name="GeneralSettingsGroupBox" Header="General Settings" Margin="10,10,360,345">
                        <Grid Margin="0,0,0,3">
                            <!-- Application sorting method -->
                            <Label Content="Application sorting method:" HorizontalAlignment="Left" Margin="10,10,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="240"/>
                            <ComboBox HorizontalAlignment="Left" Height="30" VerticalContentAlignment="Center" Margin="10,40,0,0" VerticalAlignment="Top" Width="240" SelectedItem="{Binding Setting_AppSortingMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={SLM:EnumBindingSource EnumType={x:Type Enums:AppSortingMethod}}}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Height" Value="30" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>

                            <!-- Application size calculation method -->
                            <Label Content="Application size calculation method:" HorizontalAlignment="Left" Margin="10,70,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="240"/>
                            <ComboBox HorizontalAlignment="Left" Margin="10,100,0,0" Height="30" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="240" SelectedItem="{Binding Setting_AppSizeCalculationMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:AppSizeCalculationMethod}}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Height" Value="30" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>

                            <!-- Archive size calculation method -->
                            <Label Content="Archive size calculation method:" HorizontalAlignment="Left" Margin="10,127,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="240"/>
                            <ComboBox HorizontalAlignment="Left" Margin="10,158,0,0" Height="30" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="240" SelectedItem="{Binding Setting_ArchiveSizeCalculationMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{SLM:EnumBindingSource {x:Type Enums:ArchiveSizeCalculationMethod}}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="Height" Value="30" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>

                            <!-- File size to start move synchronously (MB) -->
                            <Label Content="File size to start move synchronously (MB)" HorizontalAlignment="Left" Margin="10,185,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="240" FontSize="12"/>
                            <TextBox HorizontalAlignment="Left" VerticalContentAlignment="Center" Height="30" Margin="10,216,0,0" VerticalAlignment="Top" Width="240" Text="{SLM:SettingBinding ParallelAfterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <!-- Keep searching while switching library -->
                            <CheckBox Content="Keep searching while switching library" IsChecked="{SLM:SettingBinding includeSearchResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="10,243,0,0" VerticalAlignment="Top" Height="26" Width="240"/>

                            <!-- Advanced Logging (Requires restart) -->
                            <CheckBox Content="Advanced Logging (Requires restart)" IsChecked="{SLM:SettingBinding Advanced_Logging, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="255,10,0,0" VerticalAlignment="Top" Height="26" Width="240"/>

                            <!-- Button: View Logs (If exists) -->
                            <Button Content="View Logs (If exists)" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="255,40,0,0" Height="30" Width="240" HorizontalAlignment="Left" VerticalAlignment="Top" Click="ViewLogsButton" />

                            <!-- Check for Updates at Startup -->
                            <CheckBox Content="Check for Updates at Startup" IsChecked="{SLM:SettingBinding CheckforUpdatesAtStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="255,70,0,0" VerticalContentAlignment="Center"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="240"/>

                            <!-- Button: Check for Updates -->
                            <Button Content="Check for Updates" HorizontalAlignment="Left" Margin="255,100,0,0" VerticalAlignment="Top" Width="100" Height="30" Click="CheckForUpdates_Click" FontSize="11"/>

                            <!-- Button: Clear image cache-->
                            <Button Content="Clear image cache" Margin="360,100,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Height="30" Click="HeaderImageClearButton_Click" HorizontalAlignment="Left" Width="135"/>

                            <!-- Donate Button -->
                            <Image Name="DonateButton" MouseUp="DonateButton_MouseUp" Source="/Steam Library Manager;component/Resources/donate-button.png" Margin="0,0,10,10" MaxHeight="52" MaxWidth="130" Height="52" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Task Manager Default Settings" Margin="0,10,0,345" Padding="5,3,0,0" HorizontalAlignment="Right" Width="355">
                        <Grid Margin="0,0,10,0">
                            <!-- Remove Source Files -->
                            <CheckBox Content="Remove Source Files" IsChecked="{SLM:SettingBinding Global_RemoveOldFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="240" Margin="10,10,0,0"/>

                            <!-- Compress Files -->
                            <CheckBox Content="Compress Files" IsChecked="{SLM:SettingBinding Global_Compress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top" Height="26" Width="240"/>

                            <!-- Report File Movement -->
                            <CheckBox Content="Report File Movement" IsChecked="{SLM:SettingBinding Global_ReportFileMovement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="10,72,0,0" VerticalAlignment="Top" Height="26" Width="240"/>

                            <!-- Start Task Manager on Startup -->
                            <CheckBox Content="Start Task Manager on Startup" IsChecked="{SLM:SettingBinding Global_StartTaskManagerOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="10,103,0,0" VerticalAlignment="Top" Height="26" Width="240"/>

                            <!-- Play a sound on completion-->
                            <CheckBox Content="Play a sound on completion" IsChecked="{SLM:SettingBinding PlayASoundOnCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="10,134,0,0" VerticalAlignment="Top" Height="26" Width="240"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
