<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:slm="clr-namespace:Steam_Library_Manager"
    xmlns:enums="clr-namespace:Steam_Library_Manager.Definitions.Enums"
    xmlns:cachedImage="clr-namespace:Steam_Library_Manager.Framework.CachedImage"
    x:Name="mainForm" x:Class="Steam_Library_Manager.Main"
        Title="Steam Library Manager" Icon="/Steam Library Manager;component/Resources/steam-icon.ico" MinWidth="930" MinHeight="800" Width="920" Height="800" SnapsToDevicePixels="True" Loaded="MainForm_Loaded" Closing="MainForm_Closing" WindowStyle="ThreeDBorderWindow" SourceInitialized="MainForm_SourceInitialized">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    <Window.Resources>
        <DataTemplate x:Key="Gamelibrary_Gridview">
            <Grid MouseMove="Gamelibrary_MouseMove" ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}">
                        <ContextMenu.ItemContainerStyle>
                            <Style>
                                <EventSetter Event="MenuItem.Click" Handler="Gamelibrary_ContextMenuItem_Click" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Grid Width="230px" Height="107px" Margin="5" HorizontalAlignment="Left">
                    <cachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding GameHeaderImage}" />
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding AppName}" Padding="240,5,0,0" TextWrapping="Wrap" />
                    <Grid VerticalAlignment="Bottom" Margin="240,0,0,5">
                        <TextBlock Margin="0,-30,0,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding InstalledLibrary.IsBackup}" Value="true" />
                                                <Condition Binding="{Binding IsSteamBackup}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="SLM backup" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding IsSteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam backup" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed backup" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding LastUpdated, StringFormat='Updated on: {0}'}" HorizontalAlignment="Left" Margin="0,-15,0,0" />
                        <TextBlock Text="{Binding AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding PrettyGameSize}" HorizontalAlignment="Right" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Gamelibrary_Listview">
            <Grid MouseMove="Gamelibrary_MouseMove" ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuItems}">
                        <ContextMenu.ItemContainerStyle>
                            <Style>
                                <EventSetter Event="MenuItem.Click" Handler="Gamelibrary_ContextMenuItem_Click" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </Grid.ContextMenu>
                <Grid Width="64px" Height="32px" Margin="5" HorizontalAlignment="Left">
                    <cachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding GameHeaderImage}" />
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding AppName}" Padding="74,5,0,0" TextWrapping="Wrap" />
                    <TextBlock Text="{Binding PrettyGameSize}" HorizontalAlignment="Right" />
                    <TextBlock HorizontalAlignment="Right" Margin="0,0,60,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding InstalledLibrary.IsBackup}" Value="true" />
                                            <Condition Binding="{Binding IsSteamBackup}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Text" Value="SLM backup" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsSteamBackup}" Value="true">
                                        <Setter Property="Text" Value="Steam backup" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsCompressed}" Value="true">
                                        <Setter Property="Text" Value="Compressed backup" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Grid VerticalAlignment="Bottom" Margin="74,0,0,5">
                        <TextBlock Text="{Binding AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding LastUpdated, StringFormat='Updated on: {0}'}" HorizontalAlignment="Right" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Tasklibrary_Gridview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove selected Game(s) from Queue" Tag="Remove" Click="TaskManager_ContextMenu_Click"></MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>

                <ProgressBar Maximum="100" Value="{Binding ProgressBarPerc, Mode=OneWay}" >
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Completed}" Value="false">
                                    <Setter Property="Opacity" Value="0.25" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Completed}" Value="true">
                                    <Setter Property="Opacity" Value="0.75" />
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <Grid Width="210px" Height="87px" Margin="5" HorizontalAlignment="Left">
                    <cachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding TargetGame.GameHeaderImage}" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </cachedImage:Image>
                    <TextBlock FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Text" Value="COMPLETED" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding TargetGame.AppName}" Padding="220,5,0,0" TextWrapping="Wrap" />
                    <Grid VerticalAlignment="Bottom" Margin="220,0,0,5">
                        <TextBlock Text="{Binding TargetGame.AppID}" HorizontalAlignment="Left" />

                        <TextBlock Text="{Binding PrettyAvgSpeed}" Margin="0,-35,40,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding ProgressBarPerc, Mode=OneWay, StringFormat={}{0}%}" Margin="0,-35,2,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetLibrary.FullPath, StringFormat='Target: {0}'}" Margin="0,-20,2,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetGame.PrettyGameSize}" HorizontalAlignment="Right" Margin="0, 0, 2, 0" />

                        <TextBlock Margin="0,-20,0,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetGame.InstalledLibrary.IsBackup}" Value="true" />
                                                <Condition Binding="{Binding TargetGame.IsSteamBackup}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="SLM backup" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding TargetGame.IsSteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam backup" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TargetGame.IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed backup" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <CheckBox Content="Remove Original Files" IsChecked="{Binding RemoveOldFiles}" Margin="60,0,0,0" />
                        <CheckBox Content="Compress" IsChecked="{Binding Compress}" Margin="200,0,0,0" >
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetGame.IsCompressed}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Compress" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetGame.IsCompressed}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Keep Compressed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <CheckBox Content="Report File Movement" IsChecked="{Binding ReportFileMovement}" Margin="290,0,0,0" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Tasklibrary_Listview">
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove selected Game(s) from Queue" Tag="Remove" Click="TaskManager_ContextMenu_Click"></MenuItem>
                    </ContextMenu>
                </Grid.ContextMenu>
                <ProgressBar Margin="-3" Maximum="100" Value="{Binding ProgressBarPerc, Mode=OneWay}" >
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Completed}" Value="false">
                                    <Setter Property="Opacity" Value="0.25" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Completed}" Value="true">
                                    <Setter Property="Opacity" Value="0.75" />
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <Grid Width="64px" Height="32px" Margin="5" HorizontalAlignment="Left">
                    <cachedImage:Image Source="/Steam Library Manager;component/Resources/no_image_available.gif" Stretch="Fill" ImageUrl="{Binding TargetGame.GameHeaderImage}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </cachedImage:Image>
                    <TextBlock FontWeight="Bold"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="11">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Completed}" Value="true">
                                        <Setter Property="Text" Value="COMPLETED" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid>
                    <TextBlock Text="{Binding TargetGame.AppName}" Padding="74,5,0,0" TextWrapping="Wrap" />
                    <Grid VerticalAlignment="Bottom" Margin="74,0,0,5">
                        <TextBlock Text="{Binding TargetGame.AppID}" HorizontalAlignment="Left" />
                        <TextBlock Text="{Binding TargetGame.PrettyGameSize}" HorizontalAlignment="Right" />
                        <TextBlock Text="{Binding ProgressBarPerc, Mode=OneWay, StringFormat={}{0}%}" Margin="0,0,50,0" HorizontalAlignment="Right" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding TargetLibrary.FullPath, StringFormat='Target: {0}'}" Margin="0,-20,0,0" HorizontalAlignment="Right" TextWrapping="Wrap" />

                        <TextBlock HorizontalAlignment="Right" Margin="0,0,60,0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetGame.InstalledLibrary.IsBackup}" Value="true" />
                                                <Condition Binding="{Binding TargetGame.IsSteamBackup}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="SLM backup" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding TargetGame.IsSteamBackup}" Value="true">
                                            <Setter Property="Text" Value="Steam backup" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding TargetGame.IsCompressed}" Value="true">
                                            <Setter Property="Text" Value="Compressed backup" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <CheckBox Content="Remove Original Files" IsChecked="{Binding RemoveOldFiles}" Margin="60,0,0,0" />
                        <CheckBox Content="Compress" IsChecked="{Binding Compress}" Margin="200,0,0,0" >
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetGame.IsCompressed}" Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Compress" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding TargetGame.IsCompressed}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="Keep Compressed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <CheckBox Content="Report File Movement" IsChecked="{Binding ReportFileMovement}" Margin="290,0,0,0" />
                    </Grid>
                </Grid>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid Margin="0,40,2,2">
        <Grid x:Name="QuickSettings" Margin="600,-25,10,0" Height="30" VerticalAlignment="Top">
            <ComboBox x:Name="GameSortingMethod" HorizontalAlignment="Right" Margin="0,0,125,0" VerticalAlignment="Top" Width="160" SelectedItem="{Binding Setting_GameSortingMethod}" ItemsSource="{slm:EnumBindingSource {x:Type enums:GameSortingMethod}}" SelectionChanged="GameSortingMethod_SelectionChanged" />
            <ComboBox x:Name="LibraryStyle" HorizontalAlignment="Right" VerticalAlignment="Top" Width="120" SelectedItem="{Binding Setting_LibraryStyle}" ItemsSource="{slm:EnumBindingSource {x:Type enums:LibraryStyle}}" />
        </Grid>
        <TabControl Margin="10,0,10,10" BorderBrush="Black" Background="White">
            <TabItem Header="Library" IsSelected="True" Padding="20, 10">
                <Grid>
                    <ListView x:Name="libraryPanel" AllowDrop="True" Drop="LibraryPanel_Drop" SelectionMode="Single" MaxWidth="200" Margin="10,10,0,10" HorizontalAlignment="Left" Width="200" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" IsSynchronizedWithCurrentItem="True" SelectionChanged="LibraryGrid_MouseDown">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="110" Width="Auto" Background="Transparent" DragEnter="LibraryGrid_DragEnter" Drop="LibraryGrid_Drop" AllowDrop="True" MouseDown="Grid_MouseDown" Cursor="Hand">
                                    <Grid.ContextMenu>
                                        <ContextMenu ItemsSource="{Binding ContextMenu}" >
                                            <ContextMenu.ItemContainerStyle>
                                                <Style>
                                                    <EventSetter Event="MenuItem.Click" Handler="LibraryContextMenuItem_Click" />
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                        </ContextMenu>
                                    </Grid.ContextMenu>

                                    <TextBlock Text="OFFLINE" Margin="50,30,0,0" TextWrapping="Wrap" HorizontalAlignment="Left" FontWeight="Bold" FontSize="20">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsOffline}" Value="true" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsOffline}" Value="false" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <TextBlock Text="{Binding FullPath}" TextWrapping="Wrap" HorizontalAlignment="Left" FontWeight="Bold" />

                                    <Grid VerticalAlignment="Bottom" Margin="0, 0, 0, 30">
                                        <TextBlock x:Name="libraryType">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsBackup}" Value="false" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Text" Value="Steam Library" />
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsBackup}" Value="true" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Text" Value="Backup Library" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Games.Count, StringFormat=Game(s): \{0\}}" HorizontalAlignment="Right" />
                                    </Grid>

                                    <Grid Height="18" Margin="0, 0, 0, 8" VerticalAlignment="Bottom">
                                        <ProgressBar Height="18" Value="{Binding FreeSpacePerc}" VerticalAlignment="Stretch" IsIndeterminate="False" />
                                        <TextBlock Height="18" Text="{Binding PrettyFreeSpace, StringFormat=Available: \{0\}}" HorizontalAlignment="Center" FontWeight="Normal" />
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <ListView x:Name="gamePanel" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="215,10,10,40" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{slm:SettingBinding LibraryStyle}" Value="Grid">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Gamelibrary_Gridview}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{slm:SettingBinding LibraryStyle}" Value="Listview">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Gamelibrary_Listview}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <TextBox Margin="215,0,10,10" TextWrapping="Wrap" Height="25" VerticalAlignment="Bottom" Text="{slm:SettingBinding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextChanged="TextBox_TextChanged" />
                    <Button Content="Reset Search" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="150" Height="25" Click="ResetSearchTextButton_Click"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="Tab_TaskManager" Header="Task Manager" Padding="20, 10">
                <Grid Background="White">
                    <ListView x:Name="taskPanel" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="10,10,10,290" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="{x:Type ContentControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{slm:SettingBinding LibraryStyle}" Value="Grid">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Tasklibrary_Gridview}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{slm:SettingBinding LibraryStyle}" Value="Listview">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource Tasklibrary_Listview}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Grid Margin="10,0,0,255" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="450">
                        <Button x:Name="Button_StartTaskManager" Content="Start Task Manager" Tag="Start" Click="TaskManager_Buttons_Click"  Margin="0,0,105,0" HorizontalAlignment="Left" Width="140" MinHeight="30" MaxHeight="30" Height="30" VerticalAlignment="Bottom" />
                        <Button x:Name="Button_StopTaskManager" IsEnabled="False" Content="Stop Task Manager" Tag="Stop" Click="TaskManager_Buttons_Click" HorizontalAlignment="Left" Width="140" MinHeight="30" MaxHeight="30" Height="30" VerticalAlignment="Bottom" Margin="145,0,0,0" />
                        <Button Content="Clear Completed Tasks" Tag="ClearCompleted" Click="TaskManager_Buttons_Click"  Margin="290,0,0,0" HorizontalAlignment="Left" Width="140" MinHeight="30" MaxHeight="30" Height="30" VerticalAlignment="Bottom" />
                        <Button Content="Check for Backup Updates" Tag="BackupUpdates" Click="TaskManager_Buttons_Click"  Margin="435,0,-146,0" HorizontalAlignment="Left" Width="161" MinHeight="30" MaxHeight="30" Height="30" VerticalAlignment="Bottom" />
                    </Grid>

                    <ListBox x:Name="TaskManager_LogsView" Margin="10,0,10,10" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Height="240" VerticalAlignment="Bottom" >
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock MaxHeight="16" Text="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem Header="Library Cleaner" Padding="20,10">
                <Grid>
                    <ListView x:Name="LibraryCleaner" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="10,10,10,50" SelectionMode="Extended" IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" IsSynchronizedWithCurrentItem="True">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid ScrollViewer.VerticalScrollBarVisibility="Auto" MouseDown="Grid_MouseDown">
                                    <Grid.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Open in Explorer" Tag="Explorer" Click="LibraryCleaner_ContextMenuItem_Click"></MenuItem>
                                            <MenuItem Header="Delete selected Folder(s)" Tag="Delete" Click="LibraryCleaner_ContextMenuItem_Click"></MenuItem>
                                        </ContextMenu>
                                    </Grid.ContextMenu>
                                    <Grid>
                                        <TextBlock Text="{Binding FileSystemInfo.Name}" Padding="0,0,0,0" TextWrapping="Wrap" />
                                        <Grid VerticalAlignment="Bottom" Margin="0,20,0,0">
                                            <TextBlock Text="{Binding FileSystemInfo.FullName}" HorizontalAlignment="Left" />
                                            <TextBlock Text="{Binding FileSystemInfo.LastWriteTime, StringFormat='Last Write Time: {0}'}" HorizontalAlignment="Right" TextWrapping="Wrap" />
                                            <TextBlock Text="{Binding PrettyFolderSize}" HorizontalAlignment="Right" Margin="0,-20,0,0" />
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button Tag="DeleteAll" Content="Delete All" Margin="10,0,0,10" HorizontalAlignment="Left" Width="275" Click="LibraryCleaner_ButtonClick" Height="35" VerticalAlignment="Bottom" />
                    <!-- Visual error: On Fullscreen Move All button goes wider than others -->
                    <Button Tag="MoveAll" Content="Move All" Margin="310,0,309,10" Click="LibraryCleaner_ButtonClick" Height="35" VerticalAlignment="Bottom" />
                    <Button Tag="Refresh" Content="Refresh List" Margin="0,0,10,10" HorizontalAlignment="Right" Width="275" Click="LibraryCleaner_ButtonClick" Height="35" VerticalAlignment="Bottom"/>
                </Grid>
            </TabItem>
            <!-- WIP
            <TabItem Header="SLM Server" Padding="20, 10">
                <Grid Background="White">
                    <Label Content="Listen IP:" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Left" Margin="104,10,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ListenIP}" Height="22" />
                    <Button Content="Get IP" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,10,0,0" Width="68" Height="22" Click="GetIPButton_Click" />

                    <Label Content="Listen Port:" Margin="10,37,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox HorizontalAlignment="Left" Margin="104,37,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ListenPort}" Height="22" />
                    <Button Content="Get Port" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="320,37,0,0" Width="68" Height="22" Click="GetPortButton_Click" />

                    <Label Content="Server Status:" Margin="10,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label Name="ServerStatus" Content="" Margin="104,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="284"/>

                    <Button Name="ToggleSLMServer" Content="Start Server" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,89,0,0" Width="68" Height="22" Click="ToggleSLMServerButton_Click" />

                    <Label Content="IP:" Margin="589,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox Margin="617,10,67,0" VerticalAlignment="Top" Text="{slm:SettingBinding IPToConnect}" Height="22" />

                    <Label Content="Port:" Margin="578,33,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBox Margin="617,37,67,0" VerticalAlignment="Top" Text="{slm:SettingBinding PortToConnect}" Height="22" />
                    <Button Content="Connect" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,21,10,0" Width="52" Height="22" Click="Button_Click" />
                    <Label Content="Status:" Margin="567,63,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label x:Name="ConnectionStatus" Content="" Margin="617,64,10,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
            -->
            <TabItem Header="Settings" Padding="20, 10">
                <Grid Background="White">
                    <GroupBox x:Name="settingsGroupBox" Header="General Settings" Margin="10,10,10,360">
                        <Grid>
                            <!-- 1#1 -->
                            <Label Content="Game sorting method:" HorizontalAlignment="Left" Margin="10,10,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210"/>
                            <ComboBox HorizontalAlignment="Left" Margin="10,40,0,0" VerticalAlignment="Top" Width="210" SelectedItem="{Binding Setting_GameSortingMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={slm:EnumBindingSource EnumType={x:Type enums:GameSortingMethod}}}" />

                            <!-- 1#2 -->
                            <Label Content="Game size calculation method:" HorizontalAlignment="Left" Margin="10,70,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210"/>
                            <ComboBox HorizontalAlignment="Left" Margin="10,100,0,0" VerticalAlignment="Top" Width="210" SelectedItem="{Binding Setting_GameSizeCalculationMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{slm:EnumBindingSource {x:Type enums:GameSizeCalculationMethod}}" />

                            <!-- 1#3 -->
                            <GroupBox Header="Task Manager Defaults" Margin="10,130,0,0" Height="140" VerticalAlignment="Top" HorizontalAlignment="Left" Width="210" Padding="5,3,0,0">
                                <Grid>
                                    <!-- 1#1 -->
                                    <CheckBox Content="Remove Original Files" IsChecked="{slm:SettingBinding Global_RemoveOldFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="190"/>

                                    <!-- 1#2 -->
                                    <CheckBox Content="Compress" IsChecked="{slm:SettingBinding Global_Compress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="0,30,0,0" VerticalAlignment="Top" Height="20" Width="190"/>

                                    <!-- 1#3 -->
                                    <CheckBox Content="Report File Movement" IsChecked="{slm:SettingBinding Global_ReportFileMovement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="0,60,0,0" VerticalAlignment="Top" Height="20" Width="190"/>

                                    <!-- 1#4 -->
                                    <CheckBox Content="Start Task Manager on Startup" IsChecked="{slm:SettingBinding Global_StartTaskManagerOnStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="0,90,0,0" VerticalAlignment="Top" Height="20" Width="190"/>
                                </Grid>
                            </GroupBox>

                            <!-- 2#1 -->
                            <Label Content="Archive size calculation method:" HorizontalAlignment="Left" Margin="225,10,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210"/>
                            <ComboBox HorizontalAlignment="Left" Margin="225,40,0,0" VerticalAlignment="Top" Width="210" SelectedItem="{Binding Setting_ArchiveSizeCalculationMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{slm:EnumBindingSource {x:Type enums:ArchiveSizeCalculationMethod}}" />

                            <!-- 2#2 -->
                            <Label Content="Move files sync'ed if bigger than (MB)" HorizontalAlignment="Left" Margin="225,70,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210"/>
                            <TextBox HorizontalAlignment="Left" Margin="225,100,0,0" VerticalAlignment="Top" Width="210" Text="{slm:SettingBinding ParallelAfterSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="22" />

                            <!-- 2#3 -->
                            <CheckBox Content="Advanced Logging (req. restart)" IsChecked="{slm:SettingBinding Advanced_Logging, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="225,130,0,0" VerticalAlignment="Top" Height="20" Width="210"/>
                            <Button Content="View Logs" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="225,155,0,0" Height="25" Width="210" HorizontalAlignment="Left" VerticalAlignment="Top" Click="ViewLogsButton" />
                            
                            <!-- 2#4-->
                            <Button Content="Clear Header Image Cache" HorizontalAlignment="Left" Margin="225,185,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210" Height="25" Click="HeaderImageClearButton_Click"/>
                            
                            <!-- 3#1 -->
                            <Label Content="Include search results" HorizontalAlignment="Left" Margin="440,10,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210"/>
                            <CheckBox IsChecked="{slm:SettingBinding includeSearchResults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="440,40,0,0" VerticalAlignment="Top" Height="17" Width="210"/>
                            <!-- 3#2 -->
                            <Label Content="Play a sound on completion" HorizontalAlignment="Left" Margin="440,70,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="210"/>
                            <CheckBox IsChecked="{slm:SettingBinding PlayASoundOnCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" Margin="440,100,0,0" VerticalAlignment="Top" Height="17" Width="210"/>


                            <!-- 4#1 -->
                            <Label Content="Check for Updates at Startup" HorizontalAlignment="Left" Margin="655,10,0,0" HorizontalContentAlignment="Center" VerticalAlignment="Top" Width="165"/>
                            <CheckBox IsChecked="{slm:SettingBinding CheckforUpdatesAtStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="655,40,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="17" Width="165"/>

                            <!-- 4#2 -->
                            <Button Content="Check for Updates" HorizontalAlignment="Left" Margin="655,70,0,0" VerticalAlignment="Top" Width="165" Height="22" Click="CheckForUpdates_Click"/>

                            <!-- 4#3 -->
                            <Image Name="DonateButton" MouseUp="DonateButton_MouseUp" Source="/Steam Library Manager;component/Resources/donate-button.png" Height="49" Margin="672,97,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="132" />
                        </Grid>
                    </GroupBox>

                    <DataGrid x:Name="libraryContextMenuItems" Margin="10,0,10,185" IsSynchronizedWithCurrentItem="True" Height="170" VerticalAlignment="Bottom">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Click="LibraryDataGridMenuItem_Click" Header="Move Up" Tag="moveUp" />
                                <MenuItem Click="LibraryDataGridMenuItem_Click" Header="Move Down" Tag="moveDown" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>

                    <DataGrid x:Name="gameContextMenuItems" Margin="10,0,10,10" IsSynchronizedWithCurrentItem="True" Height="170" VerticalAlignment="Bottom">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Click="GameDataGridMenuItem_Click" Header="Move Up" Tag="moveUp" />
                                <MenuItem Click="GameDataGridMenuItem_Click" Header="Move Down" Tag="moveDown" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
